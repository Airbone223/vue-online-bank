{"remainingRequest":"C:\\Local Disk\\projects\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Local Disk\\projects\\vue\\src\\store\\modules\\request.module.js","dependencies":[{"path":"C:\\Local Disk\\projects\\vue\\src\\store\\modules\\request.module.js","mtime":1619282269784},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Local Disk/projects/vue/src/store/modules/request.module.js"],"names":["axios","store","namespaced","state","requests","getters","mutations","setRequests","addRequest","request","push","actions","create","payload","commit","dispatch","token","post","data","id","name","value","type","root","message","load","get","Object","keys","map","key","loadById","remove","update"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAFW,mBAEH;AACJ,WAAO;AACHC,MAAAA,QAAQ,EAAE;AADP,KAAP;AAGH,GANU;AAOXC,EAAAA,OAAO,EAAE;AACLD,IAAAA,QADK,oBACID,KADJ,EACW;AACZ,aAAOA,KAAK,CAACC,QAAb;AACH;AAHI,GAPE;AAYXE,EAAAA,SAAS,EAAE;AACPC,IAAAA,WADO,uBACKJ,KADL,EACYC,QADZ,EACsB;AACzBD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACH,KAHM;AAIPI,IAAAA,UAJO,sBAIIL,KAJJ,EAIWM,OAJX,EAIoB;AACvBN,MAAAA,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBD,OAApB;AACH;AANM,GAZA;AAqBXE,EAAAA,OAAO,EAAE;AACCC,IAAAA,MADD,wBAC4BC,OAD5B,EACqC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA5BC,gBAAAA,MAA4B,QAA5BA,MAA4B,EAApBC,QAAoB,QAApBA,QAAoB;AAAA;AAE5BC,gBAAAA,KAF4B,GAEpBf,KAAK,CAACI,OAAN,CAAc,YAAd,CAFoB;AAAA;AAAA,uBAGbL,KAAK,CAACiB,IAAN,+BAAkCD,KAAlC,GAA2CH,OAA3C,CAHa;;AAAA;AAAA;AAG3BK,gBAAAA,IAH2B,qBAG3BA,IAH2B;AAIlCJ,gBAAAA,MAAM,CAAC,YAAD,kCAAmBD,OAAnB;AAA4BM,kBAAAA,EAAE,EAAED,IAAI,CAACE;AAArC,mBAAN;AACAL,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,wBADY;AAEnBC,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;AALkC;AAAA;;AAAA;AAAA;AAAA;AAUlCR,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,YAAEG,OADU;AAEnBF,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;;AAVkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAezC,KAhBI;AAiBCE,IAAAA,IAjBD,uBAiB0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAnBX,gBAAAA,MAAmB,SAAnBA,MAAmB,EAAXC,QAAW,SAAXA,QAAW;AAAA;AAEjBC,gBAAAA,KAFiB,GAETf,KAAK,CAACI,OAAN,CAAc,YAAd,CAFS;AAAA;AAAA,uBAGFL,KAAK,CAAC0B,GAAN,+BAAiCV,KAAjC,EAHE;;AAAA;AAAA;AAGhBE,gBAAAA,IAHgB,oBAGhBA,IAHgB;AAIjBd,gBAAAA,QAJiB,GAINuB,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,GAAlB,CAAsB,UAAAC,GAAG;AAAA;AAAMX,oBAAAA,EAAE,EAAEW;AAAV,qBAAkBZ,IAAI,CAACY,GAAD,CAAtB;AAAA,iBAAzB,CAJM;AAKvBhB,gBAAAA,MAAM,CAAC,aAAD,EAAgBV,QAAhB,CAAN;AALuB;AAAA;;AAAA;AAAA;AAAA;AAOvBW,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,aAAEG,OADU;AAEnBF,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY9B,KA7BI;AA8BCQ,IAAAA,QA9BD,2BA8BsBZ,EA9BtB,EA8B0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAfJ,gBAAAA,QAAe,SAAfA,QAAe;AAAA;AAEjBC,gBAAAA,KAFiB,GAETf,KAAK,CAACI,OAAN,CAAc,YAAd,CAFS;AAAA;AAAA,uBAGFL,KAAK,CAAC0B,GAAN,qBAAuBP,EAAvB,wBAAuCH,KAAvC,EAHE;;AAAA;AAAA;AAGhBE,gBAAAA,IAHgB,qBAGhBA,IAHgB;AAAA,kDAIhBA,IAJgB;;AAAA;AAAA;AAAA;AAMvBH,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,aAAEG,OADU;AAEnBF,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW9B,KAzCI;AA0CCS,IAAAA,MA1CD,yBA0CoBb,EA1CpB,EA0CwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAfJ,gBAAAA,QAAe,SAAfA,QAAe;AAAA;AAEfC,gBAAAA,KAFe,GAEPf,KAAK,CAACI,OAAN,CAAc,YAAd,CAFO;AAAA;AAAA,uBAGfL,KAAK,UAAL,qBAA0BmB,EAA1B,wBAA0CH,KAA1C,EAHe;;AAAA;AAIrBD,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,iBADY;AAEnBC,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;AAJqB;AAAA;;AAAA;AAAA;AAAA;AASrBR,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,aAAEG,OADU;AAEnBF,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc5B,KAxDI;AAyDCU,IAAAA,MAzDD,yBAyDoBxB,OAzDpB,EAyD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBM,gBAAAA,QAAoB,SAApBA,QAAoB;AAAA;AAEpBC,gBAAAA,KAFoB,GAEZf,KAAK,CAACI,OAAN,CAAc,YAAd,CAFY;AAAA;AAAA,uBAGpBL,KAAK,CAACiC,MAAN,qBAA0Bd,EAA1B,wBAA0CH,KAA1C,GAAmDP,OAAnD,CAHoB;;AAAA;AAI1BM,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,mBADY;AAEnBC,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;AAJ0B;AAAA;;AAAA;AAAA;AAAA;AAU1BR,gBAAAA,QAAQ,CAAC,YAAD,EAAe;AACnBM,kBAAAA,KAAK,EAAE,aAAEG,OADU;AAEnBF,kBAAAA,IAAI,EAAE;AAFa,iBAAf,EAGL;AAACC,kBAAAA,IAAI,EAAE;AAAP,iBAHK,CAAR;;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAejC;AAxEI;AArBE,CAAf","sourcesContent":["import axios from '../../axios/request'\r\nimport store from '../index'\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state() {\r\n        return {\r\n            requests: []\r\n        }\r\n    },\r\n    getters: {\r\n        requests(state) {\r\n            return state.requests\r\n        }\r\n    },\r\n    mutations: {\r\n        setRequests(state, requests) {\r\n            state.requests = requests\r\n        },\r\n        addRequest(state, request) {\r\n            state.requests.push(request)\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        async create({commit, dispatch}, payload) {\r\n            try {\r\n                const token = store.getters['auth/token']\r\n                const {data} = await axios.post(`/requests.json?auth=${token}`, payload)\r\n                commit('addRequest', {...payload, id: data.name})\r\n                dispatch('setMessage', {\r\n                    value: 'Заявка успешно создана',\r\n                    type: 'primary'\r\n                }, {root: true})\r\n            } catch (e) {\r\n                dispatch('setMessage', {\r\n                    value: e.message,\r\n                    type: 'danger'\r\n                }, {root: true})\r\n            }\r\n        },\r\n        async load({commit, dispatch}) {\r\n            try {\r\n                const token = store.getters['auth/token']\r\n                const {data} = await axios.get(`/requests.json?auth=${token}`)\r\n                const requests = Object.keys(data).map(key => ({id: key, ...data[key]}))\r\n                commit('setRequests', requests)\r\n            } catch (e) {\r\n                dispatch('setMessage', {\r\n                    value: e.message,\r\n                    type: 'danger'\r\n                }, {root: true})\r\n            }\r\n        },\r\n        async loadById({dispatch}, id) {\r\n            try {\r\n                const token = store.getters['auth/token']\r\n                const {data} = await axios.get(`/requests/${id}.json?auth=${token}`)\r\n                return data\r\n            } catch (e) {\r\n                dispatch('setMessage', {\r\n                    value: e.message,\r\n                    type: 'danger'\r\n                }, {root: true})\r\n            }\r\n        },\r\n        async remove({dispatch}, id) {\r\n            try {\r\n                const token = store.getters['auth/token']\r\n                await axios.delete(`/requests/${id}.json?auth=${token}`)\r\n                dispatch('setMessage', {\r\n                    value: 'Заявка удалена.',\r\n                    type: 'primary'\r\n                }, {root: true})\r\n            } catch (e) {\r\n                dispatch('setMessage', {\r\n                    value: e.message,\r\n                    type: 'danger'\r\n                }, {root: true})\r\n            }\r\n        },\r\n        async update({dispatch}, request) {\r\n            try {\r\n                const token = store.getters['auth/token']\r\n                await axios.update(`/requests/${id}.json?auth=${token}`, request)\r\n                dispatch('setMessage', {\r\n                    value: 'Заявка обновлена.',\r\n                    type: 'primary'\r\n                }, {root: true})\r\n\r\n            } catch (e) {\r\n                dispatch('setMessage', {\r\n                    value: e.message,\r\n                    type: 'danger'\r\n                }, {root: true})\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}]}