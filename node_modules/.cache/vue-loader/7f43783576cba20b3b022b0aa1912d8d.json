{"remainingRequest":"C:\\Local Disk\\projects\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Local Disk\\projects\\vue\\src\\components\\ui\\AppStatus.vue?vue&type=template&id=ea1c30b0&scoped=true","dependencies":[{"path":"C:\\Local Disk\\projects\\vue\\src\\components\\ui\\AppStatus.vue","mtime":1619283256909},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Local Disk\\projects\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPHNwYW4gOmNsYXNzPSJbJ2JhZGdlJywgY2xhc3NOYW1lIF0iPnt7IHRleHQgfX08L3NwYW4+DQo="},{"version":3,"sources":["C:\\Local Disk\\projects\\vue\\src\\components\\ui\\AppStatus.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Local Disk/projects/vue/src/components/ui/AppStatus.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <span :class=\"['badge', className ]\">{{ text }}</span>\r\n</template>\r\n\r\n<script>\r\nimport { ref, watch } from 'vue'\r\nexport default {\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      required: true,\r\n      validator(value) {\r\n        return ['active', 'cancelled', 'done', 'pending'].includes(value)\r\n      }\r\n    }\r\n  },\r\n  setup(props) {\r\n    const classesMap = {\r\n      active: 'primary',\r\n      cancelled: 'danger',\r\n      done: 'primary',\r\n      pending: 'warning'\r\n    }\r\n    const textMap = {\r\n      active: 'Активен',\r\n      cancelled: 'Отменен',\r\n      done: 'Завершен',\r\n      pending: 'Выполняется'\r\n    }\r\n    const className = ref(classesMap[props.type])\r\n    const text = ref(textMap[props.type])\r\n    watch(props, val => {\r\n      className.value = classesMap[val.type]\r\n      text.value = text[val.type]\r\n    })\r\n    return {\r\n      className,\r\n      text\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}